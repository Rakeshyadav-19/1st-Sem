Driving Licence Scanning:
#include
#include

#define SS_PIN 10 // Define SS_PIN for RFID module
#define RST_PIN 9 // Define RST_PIN for RFID module
#define MOTOR_PIN 5 // Define pin connected to the motor driver

MFRC522 mfrc522(SS_PIN, RST_PIN); // Create an instance of the RFID module

void setup() {
Serial.begin(9600); // Start serial communication
SPI.begin(); // Initiate SPI communication
mfrc522.PCD_Init(); // Initiate RFID module
pinMode(MOTOR_PIN, OUTPUT); // Set MOTOR_PIN as output
stopMotor(); // Make sure the motor is initially stopped
}

void loop() {
// Look for new RFID cards
if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
Serial.println("Card detected!");

// Check if the detected card is authorized
if (isAuthorizedCard()) {
Serial.println("Access granted!");
startMotor(); // Start the motor when an authorized card is detected
delay(5000); // Run the motor for 5 seconds (adjust as needed)
stopMotor(); // Stop the motor after the specified time
} else {
Serial.println("Access denied!");
}

mfrc522.PICC_HaltA(); // Halt the card to stop further reads
}
}

bool isAuthorizedCard() {
// Replace the following UID with the UID of the authorized RFID card
byte authorizedCardUID[] = {0xAA, 0xBB, 0xCC, 0xDD};

// Compare the detected card's UID with the authorized card's UID
for (byte i = 0; i < mfrc522.uid.size; i++) {
if (mfrc522.uid.uidByte[i] != authorizedCardUID[i]) {
return false; // Not an authorized card
}
}

return true; // Authorized card detected
}

void startMotor() {
digitalWrite(MOTOR_PIN, HIGH); // Turn on the motor
}

void stopMotor() {
digitalWrite(MOTOR_PIN, LOW); // Turn off the motor
}
